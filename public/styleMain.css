html,
body {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;

  height: 100vh;
  padding: 0;
  margin: 0;
  background-color: #1f1f1f;
  position: relative;
  color: white;
}



.container {
  display: flex;
  height: 100vh;
  width: 100vw;
}

.main-content {
  flex: 1;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: #1e1e1e;
  position: relative;
}

.sidebar {
  width: 17vw;
  /* or whatever fixed width */
  background-color: #eee;
  padding: 20px;
  box-sizing: border-box;
}

#userData {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
}

#playButton {
  position: absolute;
  top: 50px;
  left: 50%;
  transform: translateX(-50%);
}

#playButton:hover {
  transform: translateX(-50%) scale(1.1);
  transition: background-color 0.3s ease, transform 0.3s ease;
  cursor: pointer;
}

.change-button {
  position: absolute;
  top: 53px;

  /* Adjust vertical position as needed */
  left: 75%;
  transform: translateX(-50%);

  width: 12px;
  /* Size of the button */
  height: 48px;

  cursor: pointer;

  background-color: rgba(255, 255, 255, 0.1);
  /* subtle translucent background */
  border-radius: 8px;
  display: flex;
  justify-content: center;
  align-items: center;

  transition: background-color 0.3s ease, transform 0.2s ease;
  z-index: 10;
  /* make sure itâ€™s above other elements */
}

.change-button img {
  width: 28px;
  height: 28px;
  user-select: none;
  pointer-events: none;
  /* So clicks go to parent */
}

.change-button:hover {
  background-color: rgba(255, 255, 255, 0.25);
  transform: translateX(-50%) scale(1.1);
}

.cards-grid {
  transform: translateY(30px);
  display: grid;
  grid-template-columns: repeat(6, 1fr);
  grid-template-rows: repeat(2, auto);
  gap: 15px;
  width: 90%;
  max-width: 1200px;
  margin: 3rem auto 0 auto;
  padding: 20px 20px;

  /* Background styles */
  background: linear-gradient(135deg, #2e2e2e, #1a1a1a);
  border-radius: 15px;
  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.7);

  /* Optional: add a subtle pattern or texture (using a semi-transparent overlay) */
  position: relative;
  overflow: hidden;
}

.card {
  position: relative;
  z-index: 1;
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;

  border-radius: 8px;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.5);

  width: 100%;
  /* fill the grid cell */
  aspect-ratio: 881 / 1249;
  /* adjust ratio if needed, e.g. 3:4 for card shape */

  cursor: pointer;
  transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.card:hover {
  transform: scale(1.05);
  box-shadow: 0 4px 12px rgba(255, 165, 0, 0.8);
}

/* Card sizing and layout adjustments */
.cardItem {
  position: relative;
  background-color: #444;
  padding: 8px;
  border-radius: 8px;
  margin-bottom: 12px;
  width: 120px;
  /* Smaller fixed width */
  display: inline-block;
  margin-right: 10px;
  vertical-align: top;
  transition: transform 0.2s ease;
}

.cardItem:hover {
  transform: scale(1.05);
  box-shadow: 0 4px 8px rgba(255, 165, 0, 0.4);
}

.cardItem img {
  width: 100%;
  height: auto;
  border-radius: 5px;
  display: block;
  /* Only display first image */
  margin-bottom: 5px;
}

/* Hide all images except the first one */
.cardItem img:not(:first-child) {
  display: none;
}

/* Modal base */
#carddeckModal {
  z-index: 2001;
}

@font-face {
  font-family: 'FatCatRegular';
  src: url('/fonts/FatCatRegular.otf') format('truetype');
}

.cardName {
  font-family: 'FatCatRegular', sans-serif;
  font-size: 0.85vw;
  font-weight: normal;
  color: #f65351;
  text-align: center;
  /* Horizontally center text */
  width: 100%;
  /* Make it span the card width */
  margin: 10px 0;
  /* Some spacing above and below */
  text-transform: uppercase;
}

.cardStats {
  position: absolute;
  top: 57%; 
  left: 50%;
  transform: translate(-50%, -50%);
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 5px 10px;
  white-space: nowrap;
}

.cardDescription {
  position: absolute;
  top: 87%;
  left: 50%;
  transform: translate(-50%, -50%);
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 5px 10px;
}

.cardDescriptionStyle {
  font-family: 'FatCatRegular', sans-serif;
  font-size: 0.45vw;
  font-weight: normal;
  color: #f65351;
  text-align: center;
  height: 4.5vw;
  width: 8vw;
}

.cardAttack{
  font-size: 1.75vw;
  position: absolute;
  top: 91%;
  left: 15%;
  transform: translate(-50%, -50%);
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 5px 10px;
  color: white;
}

.cardCost{
  font-size: 2vw;
  position: absolute;
  top: 9%;
  left: 14%;
  transform: translate(-50%, -50%);
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 5px 10px;
  color: white;
}

.cardHp{
  font-size: 1.75vw;
  position: absolute;
  top: 91%;
  left: 85%;
  transform: translate(-50%, -50%);
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 5px 10px;
  color: white;
}

.cardNameinDeck {
  font-family: 'FatCatRegular', sans-serif;
  font-size: 8px;
  font-weight: normal;
  color: #f65351;
  text-align: center;
  /* Horizontally center text */
  width: 100%;
  /* Make it span the card width */
  margin: 10px 0;
  /* Some spacing above and below */
  text-transform: uppercase;
  position: absolute;
  top: 48%;
  left: 50%;
  transform: translate(-50%, -50%);
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 5px 10px;
}

.cardDescriptioninDeck {
  position: absolute;
  top: 75%;
  left: 50%;
  transform: translate(-50%, -50%);
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 5px 10px;
  padding: 3px 8px;
  font-family: 'FatCatRegular', sans-serif;
  font-size: 6px;
  font-weight: normal;
  color: #f65351;
  text-align: center;
  width: 75%;
  max-width: 75%;
  height: auto;
  max-height: 25%;
  line-height: 1.1;
  overflow: hidden;
  word-wrap: break-word;
  hyphens: auto;
  box-sizing: border-box;
}

.cardCostinDeck{
  font-size: 18px;
  position: absolute;
  top: 11%;
  left: 15%;
  transform: translate(-50%, -50%);
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 5px 10px;
  color: white;
}

.cardAttackinDeck{
  font-size: 18px;
  position: absolute;
  top: 86%;
  left: 16%;
  transform: translate(-50%, -50%);
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 5px 10px;
  color: white;
}

.cardHpinDeck{
  font-size: 18px;
  position: absolute;
  top: 86%;
  left: 84%;
  transform: translate(-50%, -50%);
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 5px 10px;
  color: white;
}

.deckHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 15px 20px;
  background-color: #1a1a1a;
  color: white;
  border-bottom: 1px solid #333;
  position: relative;
  /* Add this for positioning the close button */
}

.closedeckBtn {
  position: absolute;
  top: 15px;
  right: 15px;
  width: 30px;
  background: none;
  border: none;
  color: white;
  font-size: 20px;
  cursor: pointer;
  padding: 5px;
  z-index: 10;
  /* Ensure it's above other elements */
}

/* Fix overall window structure */
.deckWindow {
  background-color: #2b2b2b;
  color: white;
  width: 80vw;
  height: 70vh;
  border-radius: 8px;
  overflow: hidden;
  box-shadow: 0 0 10px #000;
  display: flex;
  flex-direction: column;
  /* Change to column layout */
}

/* Adjust the cards container to be in a row */
.cardsContainer {
  display: flex;
  flex: 1;
  overflow: hidden;
}

/* Adjust active and inactive cards sections */
.activeCards,
.inactiveCards {
  padding: 20px;
  overflow-y: auto;
}

.activeCards {
  flex: 2;
  display: flex;
  flex-direction: column;
}

.inactiveCards {
  flex: 1;
  background-color: #1a1a1a;
}

#rightSidebar {
  position: fixed;
  right: 0;
  top: 0;
  width: 17vw;
  height: 100vh;
  background-color: #f2f2f2;
  border-left: 1px solid #ccc;
  padding: 10px;
  box-sizing: border-box;
  z-index: 1000;
  color: black;

  display: grid;
  grid-template-rows: 30% 60% 10%;
  gap: 10px;
}

.sidebar-top {
  display: flex;
  justify-content: space-between;
  width: 100%;
  align-items: center;
}

.sidebar-top,
.sidebar-middle,
.sidebar-bottom {
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
}

/* Optional: add spacing or style to children */
.sidebarTop {
  justify-content: space-between;
}

.sidebarMiddle {
  justify-content: center;
  gap: 10px;
}

.sidebarBottom {
  justify-content: flex-end;
}

.redirectButton {
  cursor: pointer;
  padding: 10px;
  color: #007bff;
  border-radius: 5px;
  text-align: center;
  transition: background-color 0.3s ease;
  margin-top: auto;
}

.redirectButton:hover {
  text-decoration: underline;
}

/* Remove manual positioning! */
#logout {
  position: static;
  transform: none;
  left: auto;
  top: auto;
}

.settingButton {
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 32px;
  height: 32px;
  padding: 4px;
  border: none;
  background: none;

  position: absolute;
  /* or 'fixed' if you want it to stay on scroll */
  top: 10px;
  right: 10px;
  z-index: 1000;
  /* make sure it's on top */
}

.setting-icon {
  width: 100%;
  height: 100%;
  object-fit: contain;
}

#avatar {
  width: 120px;
  height: 120px;
  border-radius: 50%;
  background-color: #ccc;
  border: 2px solid #999;
  margin: 20px 0;
  overflow: hidden;
  /* Ensures the image is clipped */
  display: flex;
  /* Optional: helps with image centering */
  align-items: center;
  justify-content: center;
}

#avatar img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  /* Crop the image nicely */
  display: block;
}

.ratingBox {
  width: 100px;
  height: 40px;
  border: 2px solid gold;
  border-radius: 6px;
  display: flex;
  justify-content: center;
  align-items: center;
  color: gold;
  font-weight: bold;
  font-size: 18px;
  background-color: #222;
  user-select: none;
  margin-top: 10px;
}

.friendsSection {
  width: 100%;
  flex: 1;
  display: flex;
  flex-direction: column;
  padding: 10px 0;
  color: black;
}

.search-user {
  padding: 8px;
  border-radius: 5px;
  border: 1px solid #ccc;
  margin-bottom: 8px;
  font-size: 14px;
}

#searchResults,
#friendsList {
  list-style: none;
  padding: 0;
  margin: 0 0 10px 0;
  overflow-y: auto;
  max-height: 150px;
  border: 1px solid #ccc;
  border-radius: 5px;
  background: white;
}

#searchResults li,
#friendsList li {
  padding: 6px 10px;
  cursor: pointer;
}

#searchResults li:hover {
  background-color: #f0f0f0;
}

#friendsList li {
  background-color: #e7e7e7;
  margin-bottom: 4px;
  border-radius: 4px;
}

.modal {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background-color: rgba(0, 0, 0, 0.5);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 2000;
}

.hidden {
  display: none;
}

.settingsWindow {
  background-color: #2b2b2b;
  color: white;
  display: flex;
  width: 68vw;
  height: 60vh;
  border-radius: 8px;
  overflow: hidden;
  box-shadow: 0 0 10px #000;
}

.settingsSidebar {
  width: 20%;
  background-color: #1a1a1a;
  display: flex;
  flex-direction: column;
  padding: 10px;
}

.settingsTab {
  background: none;
  border: none;
  padding: 10px;
  text-align: left;
  color: white;
  cursor: pointer;
  transition: background 0.3s;
}

.settingsTab:hover,
.settingsTab.active {
  background-color: #444;
}

.settingsContent {
  flex-grow: 1;
  padding: 20px;
  position: relative;
}

.settingsSection {
  display: none;
}

.settingsSection.active {
  display: block;
}

#volumeSlider {
  padding: 3px 0;
}

#musicToggle {
  margin-top: 10px;
}

.closeSettings {
  position: absolute;
  top: 10px;
  right: 10px;
  background: none;
  border: none;
  color: white;
  font-size: 18px;
  cursor: pointer;
}

/* cyber button  play */

.cybr-btn {
  --primary: hsl(var(--primary-hue), 85%, calc(var(--primary-lightness, 50) * 1%));
  --shadow-primary: hsl(var(--shadow-primary-hue), 90%, 50%);
  --primary-hue: 0;
  --primary-lightness: 50;
  --color: hsl(0, 0%, 100%);
  --font-size: 26px;
  --shadow-primary-hue: 180;
  --label-size: 9px;
  --shadow-secondary-hue: 60;
  --shadow-secondary: hsl(var(--shadow-secondary-hue), 90%, 60%);
  --clip: polygon(0 0, 100% 0, 100% 100%, 95% 100%, 95% 90%, 85% 90%, 85% 100%, 8% 100%, 0 70%);
  --border: 4px;
  --shimmy-distance: 5;
  --clip-one: polygon(0 2%, 100% 2%, 100% 95%, 95% 95%, 95% 90%, 85% 90%, 85% 95%, 8% 95%, 0 70%);
  --clip-two: polygon(0 78%, 100% 78%, 100% 100%, 95% 100%, 95% 90%, 85% 90%, 85% 100%, 8% 100%, 0 78%);
  --clip-three: polygon(0 44%, 100% 44%, 100% 54%, 95% 54%, 95% 54%, 85% 54%, 85% 54%, 8% 54%, 0 54%);
  --clip-four: polygon(0 0, 100% 0, 100% 0, 95% 0, 95% 0, 85% 0, 85% 0, 8% 0, 0 0);
  --clip-five: polygon(0 0, 100% 0, 100% 0, 95% 0, 95% 0, 85% 0, 85% 0, 8% 0, 0 0);
  --clip-six: polygon(0 40%, 100% 40%, 100% 85%, 95% 85%, 95% 85%, 85% 85%, 85% 85%, 8% 85%, 0 70%);
  --clip-seven: polygon(0 63%, 100% 63%, 100% 80%, 95% 80%, 95% 80%, 85% 80%, 85% 80%, 8% 80%, 0 70%);
  font-family: 'Cyber', sans-serif;
  color: var(--color);
  cursor: pointer;
  background: transparent;
  text-transform: uppercase;
  font-size: var(--font-size);
  outline: transparent;
  letter-spacing: 2px;
  position: relative;
  font-weight: 700;
  border: 0;
  min-width: 300px;
  height: 75px;
  line-height: 75px;
  transition: background 0.2s;
  text-align: center;
}

.cybr-btn:hover {
  --primary: hsl(var(--primary-hue), 85%, calc(var(--primary-lightness, 50) * 0.8%));
}

.cybr-btn:active {
  --primary: hsl(var(--primary-hue), 85%, calc(var(--primary-lightness, 50) * 0.6%));
}

.cybr-btn:after,
.cybr-btn:before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  -webkit-clip-path: var(--clip);
  clip-path: var(--clip);
  z-index: -1;
}

.cybr-btn:before {
  background: var(--shadow-primary);
  transform: translate(var(--border), 0);
}

.cybr-btn:after {
  background: var(--primary);
}

.cybr-btn__tag {
  position: absolute;
  padding: 1px 4px;
  letter-spacing: 1px;
  line-height: 1;
  bottom: -5%;
  right: 5%;
  font-weight: normal;
  color: hsl(0, 0%, 0%);
  font-size: var(--label-size);
}

.cybr-btn__glitch {
  position: absolute;
  top: calc(var(--border) * -1);
  left: calc(var(--border) * -1);
  right: calc(var(--border) * -1);
  bottom: calc(var(--border) * -1);
  background: var(--shadow-primary);
  text-shadow: 2px 2px var(--shadow-primary), -2px -2px var(--shadow-secondary);
  -webkit-clip-path: var(--clip);
  clip-path: var(--clip);
  -webkit-animation: glitch 2s infinite;
  animation: glitch 2s infinite;
  display: none;
}

.cybr-btn:hover .cybr-btn__glitch {
  display: block;
}

.cybr-btn__glitch:before {
  content: '';
  position: absolute;
  top: calc(var(--border) * 1);
  right: calc(var(--border) * 1);
  bottom: calc(var(--border) * 1);
  left: calc(var(--border) * 1);
  -webkit-clip-path: var(--clip);
  clip-path: var(--clip);
  background: var(--primary);
  z-index: -1;
}

#notificationContainer {
    position: fixed;
    top: 20px;
    left: 50%;
    transform: translateX(-50%);
    z-index: 9999;
    display: flex;
    flex-direction: column;
    gap: 12px;
    align-items: center;
    pointer-events: none;
}

.notification {
    padding: 10px 20px;
    border: 2px solid;
    border-radius: 6px;
    font-family: Oxanium, monospace;
    font-size: 1rem;
    letter-spacing: 1px;
    animation: fadeInOutGlitch 4s ease-in-out forwards;
    clip-path: polygon(0 0, 100% 0, 100% 90%, 95% 100%, 5% 100%, 0 90%);
    pointer-events: all;
}

.notification.error {
    background-color: #ff003c;
    border-color: #ff003c;
    color: black;
    text-shadow: 0 0 2px #000;
}

.notification.success {
    background-color: #f8ef02;
    border-color: #f8ef02;
    color: black;
    text-shadow: 0 0 2px #000;
}

@-webkit-keyframes glitch {
  0% {
    -webkit-clip-path: var(--clip-one);
    clip-path: var(--clip-one);
  }

  2%,
  8% {
    -webkit-clip-path: var(--clip-two);
    clip-path: var(--clip-two);
    transform: translate(calc(var(--shimmy-distance) * -1%), 0);
  }

  6% {
    -webkit-clip-path: var(--clip-two);
    clip-path: var(--clip-two);
    transform: translate(calc(var(--shimmy-distance) * 1%), 0);
  }

  9% {
    -webkit-clip-path: var(--clip-two);
    clip-path: var(--clip-two);
    transform: translate(0, 0);
  }

  10% {
    -webkit-clip-path: var(--clip-three);
    clip-path: var(--clip-three);
    transform: translate(calc(var(--shimmy-distance) * 1%), 0);
  }

  13% {
    -webkit-clip-path: var(--clip-three);
    clip-path: var(--clip-three);
    transform: translate(0, 0);
  }

  14%,
  21% {
    -webkit-clip-path: var(--clip-four);
    clip-path: var(--clip-four);
    transform: translate(calc(var(--shimmy-distance) * 1%), 0);
  }

  25% {
    -webkit-clip-path: var(--clip-five);
    clip-path: var(--clip-five);
    transform: translate(calc(var(--shimmy-distance) * 1%), 0);
  }

  30% {
    -webkit-clip-path: var(--clip-five);
    clip-path: var(--clip-five);
    transform: translate(calc(var(--shimmy-distance) * -1%), 0);
  }

  35%,
  45% {
    -webkit-clip-path: var(--clip-six);
    clip-path: var(--clip-six);
    transform: translate(calc(var(--shimmy-distance) * -1%));
  }

  40% {
    -webkit-clip-path: var(--clip-six);
    clip-path: var(--clip-six);
    transform: translate(calc(var(--shimmy-distance) * 1%));
  }

  50% {
    -webkit-clip-path: var(--clip-six);
    clip-path: var(--clip-six);
    transform: translate(0, 0);
  }

  55% {
    -webkit-clip-path: var(--clip-seven);
    clip-path: var(--clip-seven);
    transform: translate(calc(var(--shimmy-distance) * 1%), 0);
  }

  60% {
    -webkit-clip-path: var(--clip-seven);
    clip-path: var(--clip-seven);
    transform: translate(0, 0);
  }

  31%,
  61%,
  100% {
    -webkit-clip-path: var(--clip-four);
    clip-path: var(--clip-four);
  }
}

@keyframes glitch {
  0% {
    -webkit-clip-path: var(--clip-one);
    clip-path: var(--clip-one);
  }

  2%,
  8% {
    -webkit-clip-path: var(--clip-two);
    clip-path: var(--clip-two);
    transform: translate(calc(var(--shimmy-distance) * -1%), 0);
  }

  6% {
    -webkit-clip-path: var(--clip-two);
    clip-path: var(--clip-two);
    transform: translate(calc(var(--shimmy-distance) * 1%), 0);
  }

  9% {
    -webkit-clip-path: var(--clip-two);
    clip-path: var(--clip-two);
    transform: translate(0, 0);
  }

  10% {
    -webkit-clip-path: var(--clip-three);
    clip-path: var(--clip-three);
    transform: translate(calc(var(--shimmy-distance) * 1%), 0);
  }

  13% {
    -webkit-clip-path: var(--clip-three);
    clip-path: var(--clip-three);
    transform: translate(0, 0);
  }

  14%,
  21% {
    -webkit-clip-path: var(--clip-four);
    clip-path: var(--clip-four);
    transform: translate(calc(var(--shimmy-distance) * 1%), 0);
  }

  25% {
    -webkit-clip-path: var(--clip-five);
    clip-path: var(--clip-five);
    transform: translate(calc(var(--shimmy-distance) * 1%), 0);
  }

  30% {
    -webkit-clip-path: var(--clip-five);
    clip-path: var(--clip-five);
    transform: translate(calc(var(--shimmy-distance) * -1%), 0);
  }

  35%,
  45% {
    -webkit-clip-path: var(--clip-six);
    clip-path: var(--clip-six);
    transform: translate(calc(var(--shimmy-distance) * -1%));
  }

  40% {
    -webkit-clip-path: var(--clip-six);
    clip-path: var(--clip-six);
    transform: translate(calc(var(--shimmy-distance) * 1%));
  }

  50% {
    -webkit-clip-path: var(--clip-six);
    clip-path: var(--clip-six);
    transform: translate(0, 0);
  }

  55% {
    -webkit-clip-path: var(--clip-seven);
    clip-path: var(--clip-seven);
    transform: translate(calc(var(--shimmy-distance) * 1%), 0);
  }

  60% {
    -webkit-clip-path: var(--clip-seven);
    clip-path: var(--clip-seven);
    transform: translate(0, 0);
  }

  31%,
  61%,
  100% {
    -webkit-clip-path: var(--clip-four);
    clip-path: var(--clip-four);
  }
}